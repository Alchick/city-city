#coding: utf-8
import os
from flask import render_template, request, flash, url_for, __version__
from app import app
from forms import ArticleForms
from check_functions import save_request_data, get_data_from_db

@app.route('/')
@app.route('/index.html')
def index():
    print url_for('static', filename='css/stylemain.css')
    return render_template("index.html")

@app.route('/about.html')
def about():
    return render_template("about.html")


@app.route('/read.html')
def read():
    records = get_data_from_db()
    return render_template("read.html",
                           records = records)

@app.route('/get_file.html')
def get_file():
    filename = request.args.get('filename') #could it be empty?
    article_name = request.args.get('article_name') #could it be empty?
    author_name = request.args.get('author_name') #could it be empty?
    date = request.args.get('date') #could it be empty?
    passi = request.args.get('pass') #could it be empty?
    print author_name
    print passi
    return render_template("get_file.html",\
                          filename = filename,\
                          article_name = article_name,\
                          author_name = author_name,\
                          date = date)

@app.route('/contacts.html')
def contact():
    return render_template("contacts.html")



@app.route('/create.html', methods = ['GET', 'POST'])
def create():
    form = ArticleForms()
    if request.method == 'POST' and form.validate_on_submit():
        flash(save_request_data(request))
        return render_template('create.html',\
                                form=form)
    return render_template("create.html",\
                           form=form)
@app.errorhandler(413)
def EntityTooLarge(error):
    return render_template("error.html", error = 413), 413

@app.errorhandler(404)
def page_not_found(error):
    return render_template("error.html", error = 404), 404


